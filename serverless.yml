service: sls-boilerplate-http

frameworkVersion: '2'

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  lambdaHashingVersion: '20201221'
  runtime: ${file(./configs/aws/awsconfig.${self:provider.stage}.json):RUNTIME}
  region: ${file(./configs/aws/awsconfig.${self:provider.stage}.json):AWS_REGION}

custom:
  memorysize: ${file(./configs/aws/awsconfig.${self:provider.stage}.json):MEM_SIZE}
  timeout: ${file(./configs/aws/awsconfig.${self:provider.stage}.json):TIMEOUT}
  serverless-offline:
    httpPort: ${opt:port, 8080}

functions:
  root:
    handler:
      - middlewares/bodyparser.bodyparser
      - then: scripts/root.handler
    memorySize: ${self:custom.memorysize}
    timeout: ${self:custom.timeout}
    description: Health Check
    events:
      - http:
          path: /
          method: get
  login:
    handler:
      - middlewares/bodyparser.bodyparser
      - then: scripts/login.handler
    memorySize: ${self:custom.memorysize}
    timeout: ${self:custom.timeout}
    description: Login API
    events:
      - http:
          path: /login
          method: post
  register:
    handler:
      - middlewares/bodyparser.bodyparser
      - then: scripts/register.handler
    memorySize: ${self:custom.memorysize}
    timeout: ${self:custom.timeout}
    description: Register API
    events:
      - http:
          path: /register
          method: post
  getprofile:
    handler:
      - middlewares/bodyparser.bodyparser
      - middlewares/authguard.authguard
      - then: scripts/getProfile.handler
    memorySize: ${self:custom.memorysize}
    timeout: ${self:custom.timeout}
    description: Get Profile
    events:
      - http:
          path: /getprofile
          method: get

plugins:
  - serverless-middleware
  - serverless-offline
  - serverless-dotenv-plugin
